// bubble_array.cpp : 이 파일에는 'main' 함수가 포함됩니다. 거기서 프로그램 실행이 시작되고 종료됩니다.
//

#include <stdio.h>

#define AAA 10
int aa[AAA] = { 9,8,0,1,2,3,4,5,6,7 }; // 정렬할 배열과 요소의 개수를 받음

// 반복문 돌아가는 것 체크하는 for문 만들기
int main()
{
	int bb = 0; //초기화
	int check = 0;

	for (int j = 0; j < AAA - 1; j++) 
	// 요소의 개수만큼 반복, 불필요한 반복 없앤다.(이미 뒤에는 반복을 해 값이 나왔기 때문에 -1 해준다
	{
		check = 0;
		for (int i = 0; i < AAA - j - 1; i++) // 요소의 개수 - 1만큼 반복 -> 10개면 9번을 반복해서 앞뒤 비교
		{
			bb++;
			if (aa[i] > aa[i + 1])  // 현재 요소의 값과 다음 요소의 값을 비교하여
			{
				check++;
				int temp;
				temp = aa[i];
				aa[i] = aa[i + 1];
				aa[i + 1] = temp; // 큰 값을 다음 요소로 보냄
			}

		}
		if (check == 0)//비교연산자
		{
			break; 
		}
			
	} //이부분에서 정렬이 다 된다
	for (int i = 0; i < AAA; i++) // 변수다시 선언 
	{
		printf("%d\n", aa[i]);
	}// 프린트해서 변수 다 정렬되었나 확인
	printf("횟수%d", bb);
	return 0;
}

// 프로그램 실행: <Ctrl+F5> 또는 [디버그] > [디버깅하지 않고 시작] 메뉴
// 프로그램 디버그: <F5> 키 또는 [디버그] > [디버깅 시작] 메뉴

// 시작을 위한 팁: 
//   1. [솔루션 탐색기] 창을 사용하여 파일을 추가/관리합니다.
//   2. [팀 탐색기] 창을 사용하여 소스 제어에 연결합니다.
//   3. [출력] 창을 사용하여 빌드 출력 및 기타 메시지를 확인합니다.
//   4. [오류 목록] 창을 사용하여 오류를 봅니다.
//   5. [프로젝트] > [새 항목 추가]로 이동하여 새 코드 파일을 만들거나, [프로젝트] > [기존 항목 추가]로 이동하여 기존 코드 파일을 프로젝트에 추가합니다.
//   6. 나중에 이 프로젝트를 다시 열려면 [파일] > [열기] > [프로젝트]로 이동하고 .sln 파일을 선택합니다.
